typed_config:
"@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
rules:
  action: ALLOW
  policies:
  ## exemplo de permiss√µes para um admin, que acessaria todos os endpoints
    "service-admin":
      permissions:
        - any: true
      principals:
        - authenticated:
            principal_name:
              exact: "spiffe://example.org/admin"
    "authenticate":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "POST"}}
              - url_path: { path: { prefix: "/service/rest/auth" } }
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }

    #Building
    "getBuilding":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path: 
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
    "getBuildingSensors":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/sensors$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
    "getDemands":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/demands$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
    
    #Consumption
    "getLastDemand":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/demand/last$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getLastNMinutesDemand":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/demand/last_n_minutes$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getConsumption":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/consumption$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getDemandReport":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/demandReport$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    # Unsupported Media Type
    "getDisaggregatedConsumption":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/consumption/disaggregated$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    #sensor
    "getSensorInfos":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path: { prefix: "/service/rest/sensors"}
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
    "getSensor":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/sensor/[^/]+$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
    "getHistory":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path: { prefix: "/service/rest/consumptionHistory"}
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }

    #Statistics
    "getBuildingStatistics":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/statistics$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getSensorStatistics":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/sensor/[^/]+/statistics$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getStatisticsStatus":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/statisticsStatus$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getPeriodStatisticsStatus":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/periodStatisticsStatus$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    "getBuildingStatisticsAlwaysOn":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/building/[^/]+/statistics/alwayson$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto3" } }
    
    #User
    "getSensorsByUser":
      permissions:
        - and_rules:
            rules:
              - header: {name: ":method", string_match: {exact: "GET"}}
              - url_path:
                  path:
                    safe_regex:
                      google_re2: {}
                      regex: "^/service/rest/user/[^/]+/sensors$"  
      principals:
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto1" } }
        - authenticated: { principal_name: { exact: "spiffe://example.org/projeto2" } }
    